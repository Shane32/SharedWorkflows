name: Deploy Azure Web App

on:
  workflow_call:
    inputs:
      environment_name:
        description: 'Environment name for deployment'
        required: true
        type: string
      artifact_name:
        description: 'Name of the .NET artifact to deploy'
        required: false
        type: string
        default: '.net-app'
      spa_artifact:
        description: 'Name of the SPA artifact to deploy in the wwwroot folder'
        required: false
        type: string
      persisted_documents_artifact:
        description: 'Name of the persisted documents artifact to deploy'
        required: false
        type: string
      azure_client_id:
        description: 'Client ID for Azure deployment'
        required: false
        type: string
      azure_tenant_id:
        description: 'Tenant ID for Azure deployment'
        required: false
        type: string
      azure_subscription_id:
        description: 'Subscription ID for Azure deployment'
        required: false
        type: string
      azure_webapp_name:
        description: 'Azure Web App name for deployment'
        required: false
        type: string
      azure_webapp_slot_name:
        description: 'Azure Web App slot name for deployment'
        required: false
        type: string

jobs:
  deploy_azurewebapp:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment_name }}
    permissions:
      id-token: write
    steps:
      - name: Validate required inputs
        env:
          AZURE_CLIENT_ID: ${{ inputs.azure_client_id || vars.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ inputs.azure_tenant_id || vars.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ inputs.azure_subscription_id || vars.AZURE_SUBSCRIPTION_ID }}
          AZURE_WEBAPP_NAME: ${{ inputs.azure_webapp_name || vars.AZURE_WEBAPP_NAME }}
        run: |
          MISSING_VARS=""
          
          if [ -z "$AZURE_CLIENT_ID" ]; then
            MISSING_VARS="$MISSING_VARS AZURE_CLIENT_ID"
          fi
          
          if [ -z "$AZURE_TENANT_ID" ]; then
            MISSING_VARS="$MISSING_VARS AZURE_TENANT_ID"
          fi
          
          if [ -z "$AZURE_SUBSCRIPTION_ID" ]; then
            MISSING_VARS="$MISSING_VARS AZURE_SUBSCRIPTION_ID"
          fi
          
          if [ -z "$AZURE_WEBAPP_NAME" ]; then
            MISSING_VARS="$MISSING_VARS AZURE_WEBAPP_NAME"
          fi
          
          if [ -n "$MISSING_VARS" ]; then
            echo "❌ Missing required variables or inputs:$MISSING_VARS"
            echo "Please provide these as workflow inputs or repository/environment variables."
            exit 1
          fi
          
          echo "✅ All required variables are provided"

      - name: Download .NET artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}

      - name: Download SPA persisted documents file
        uses: actions/download-artifact@v4
        if: inputs.persisted_documents_artifact != ''
        with:
          name: ${{ inputs.persisted_documents_artifact }}

      - name: Download SPA artifact
        uses: actions/download-artifact@v4
        if: inputs.spa_artifact
        with:
          name: ${{ inputs.spa_artifact }}
          path: wwwroot

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.azure_client_id || vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ inputs.azure_tenant_id || vars.AZURE_TENANT_ID }}
          subscription-id: ${{ inputs.azure_subscription_id || vars.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ inputs.azure_webapp_name || vars.AZURE_WEBAPP_NAME }}
          slot-name: ${{ inputs.azure_webapp_slot_name || vars.AZURE_WEBAPP_SLOT_NAME || 'Production' }}
          package: .
